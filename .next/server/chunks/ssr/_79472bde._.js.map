{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/src/app/Components/AIChat.tsx"],"sourcesContent":[" \r\n'use client';\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function AIChat() {\r\n  const [listening, setListening] = useState(false);\r\n  const [messages, setMessages] = useState<{ role: string; text: string }[]>([]);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // 🎤 Start voice recognition\r\n  const startListening = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert(\"Speech Recognition not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const SpeechRecognition = (window as any).webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onstart = () => setListening(true);\r\n    recognition.onend = () => setListening(false);\r\n\r\n    recognition.onresult = async (event: any) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      addMessage(\"user\", transcript);\r\n      await sendToAI(transcript);\r\n    };\r\n\r\n    recognition.start();  \r\n    recognitionRef.current = recognition;\r\n  };\r\n\r\n  // 🤖 Send message to AI\r\n  const sendToAI = async (text: string) => {\r\n    const res = await fetch(\"/api/chat\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ message: text }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    addMessage(\"ai\", data.reply);\r\n    speak(data.reply);\r\n  };\r\n\r\n  // 🗣️ Speak AI response\r\n  const speak = (text: string) => {\r\n    const synth = window.speechSynthesis;\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.lang = \"en-US\";\r\n    synth.speak(utterance);\r\n  };\r\n\r\n  // 💬 Add message\r\n  const addMessage = (role: string, text: string) => {\r\n    setMessages((prev) => [...prev, { role, text }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-lg mx-auto space-y-4\">\r\n      <div className=\"border p-2 rounded h-64 overflow-y-auto bg-gray-100\">\r\n        {messages.map((m, i) => (\r\n          <div key={i} className={m.role === \"user\" ? \"text-blue-600\" : \"text-green-600\"}>\r\n            <b>{m.role}:</b> {m.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={startListening}\r\n        className={`px-4 py-2 rounded ${listening ? \"bg-red-500\" : \"bg-blue-500\"} text-white`}\r\n      >\r\n        {listening ? \"Listening...\" : \"🎤 Speak\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AADA;;;AAGe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoC,EAAE;IAC7E,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAO;IAEnC,6BAA6B;IAC7B,MAAM,iBAAiB;QACrB,IAAI,CAAC,CAAC,6BAA6B,MAAM,GAAG;YAC1C,MAAM;YACN;QACF;QAEA,MAAM,oBAAoB,AAAC,OAAe,uBAAuB;QACjE,MAAM,cAAc,IAAI;QACxB,YAAY,IAAI,GAAG;QACnB,YAAY,cAAc,GAAG;QAE7B,YAAY,OAAO,GAAG,IAAM,aAAa;QACzC,YAAY,KAAK,GAAG,IAAM,aAAa;QAEvC,YAAY,QAAQ,GAAG,OAAO;YAC5B,MAAM,aAAa,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU;YACjD,WAAW,QAAQ;YACnB,MAAM,SAAS;QACjB;QAEA,YAAY,KAAK;QACjB,eAAe,OAAO,GAAG;IAC3B;IAEA,wBAAwB;IACxB,MAAM,WAAW,OAAO;QACtB,MAAM,MAAM,MAAM,MAAM,aAAa;YACnC,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE,SAAS;YAAK;QACvC;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,WAAW,MAAM,KAAK,KAAK;QAC3B,MAAM,KAAK,KAAK;IAClB;IAEA,wBAAwB;IACxB,MAAM,QAAQ,CAAC;QACb,MAAM,QAAQ,OAAO,eAAe;QACpC,MAAM,YAAY,IAAI,yBAAyB;QAC/C,UAAU,IAAI,GAAG;QACjB,MAAM,KAAK,CAAC;IACd;IAEA,iBAAiB;IACjB,MAAM,aAAa,CAAC,MAAc;QAChC,YAAY,CAAC,OAAS;mBAAI;gBAAM;oBAAE;oBAAM;gBAAK;aAAE;IACjD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,GAAG,kBAChB,8OAAC;wBAAY,WAAW,EAAE,IAAI,KAAK,SAAS,kBAAkB;;0CAC5D,8OAAC;;oCAAG,EAAE,IAAI;oCAAC;;;;;;;4BAAK;4BAAE,EAAE,IAAI;;uBADhB;;;;;;;;;;0BAMd,8OAAC;gBACC,SAAS;gBACT,WAAW,CAAC,kBAAkB,EAAE,YAAY,eAAe,cAAc,WAAW,CAAC;0BAEpF,YAAY,iBAAiB;;;;;;;;;;;;AAItC","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}