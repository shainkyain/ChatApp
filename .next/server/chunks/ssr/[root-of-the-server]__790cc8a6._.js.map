{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/src/app/Components/AIChat.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import React, { useState } from 'react';\r\n// // import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\n// const AIChat: React.FC = () => {\r\n//   const [messages, setMessages] = useState<string[]>([]);\r\n//   const [input, setInput] = useState('');\r\n\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return <span>Speech recognition is not supported in this browser.</span>;\r\n//   }\r\n\r\n//   const handleSend = () => {\r\n//     if (!input.trim()) return;\r\n//     setMessages([...messages, `You: ${input}`, `AI: ${generateReply(input)}`]);\r\n//     setInput('');\r\n//     resetTranscript();\r\n//   };\r\n\r\n//   const generateReply = (text: string) => {\r\n//     return `I'm just a mock AI, but you said: \"${text}\"`;\r\n//   };\r\n\r\n//   const handleVoiceInput = () => {\r\n//     SpeechRecognition.startListening({ continuous: false, language: 'en-US' });\r\n//     setInput(transcript);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto bg-white rounded shadow\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">AI Chat ü§ñ</h1>\r\n//       <div className=\"space-y-2 mb-4\">\r\n//         {messages.map((msg, idx) => (\r\n//           <div key={idx} className=\"bg-gray-100 p-2 rounded\">{msg}</div>\r\n//         ))}\r\n//       </div>\r\n//       <div className=\"flex gap-2\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={input || transcript}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           className=\"flex-1 p-2 border rounded\"\r\n//           placeholder=\"Type or speak your message...\"\r\n//         />\r\n//         <button\r\n//           onClick={handleSend}\r\n//           className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n//         >\r\n//           Send\r\n//         </button>\r\n//         <button\r\n//           onClick={handleVoiceInput}\r\n//           className={`px-4 py-2 rounded text-white ${listening ? 'bg-red-600' : 'bg-green-600'} hover:opacity-80`}\r\n//         >\r\n//           üé§ {listening ? 'Listening...' : 'Speak'}\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AIChat;\r\n\r\n\r\n// 'use client';\r\n\r\n// import React, { useState } from 'react';\r\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\n// const AIChat: React.FC = () => {\r\n//   const [messages, setMessages] = useState<string[]>([]);\r\n//   const [input, setInput] = useState('');\r\n\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return <span>Speech recognition is not supported in this browser.</span>;\r\n//   }\r\n\r\n//   const speakText = (text: string) => {\r\n//     const utterance = new SpeechSynthesisUtterance(text);\r\n//     utterance.lang = 'en-US';\r\n//     utterance.pitch = 1;\r\n//     utterance.rate = 1;\r\n//     utterance.volume = 1;\r\n//     speechSynthesis.speak(utterance);\r\n//   };\r\n\r\n//   const handleSend = () => {\r\n//     if (!input.trim()) return;\r\n//     const userMessage = `You: ${input}`;\r\n//     const aiMessage = `AI: ${generateReply(input)}`;\r\n//     setMessages([...messages, userMessage, aiMessage]);\r\n//     speakText(aiMessage);\r\n//     setInput('');\r\n//     resetTranscript();\r\n//   };\r\n\r\n//   const generateReply = (text: string) => {\r\n//     return `I'm just a mock AI, but you said: \"${text}\"`;\r\n//   };\r\n\r\n//   const handleVoiceInput = () => {\r\n//     SpeechRecognition.startListening({ continuous: false, language: 'en-US' });\r\n//     setInput(transcript);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto bg-white rounded shadow\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">AI Chat ü§ñ</h1>\r\n//       <div className=\"space-y-2 mb-4\">\r\n//         {messages.map((msg, idx) => (\r\n//           <div key={idx} className=\"bg-gray-100 p-2 rounded\">{msg}</div>\r\n//         ))}\r\n//       </div>\r\n//       <div className=\"flex gap-2\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={input || transcript}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           className=\"flex-1 p-2 border rounded\"\r\n//           placeholder=\"Type or speak your message...\"\r\n//         />\r\n//         <button\r\n//           onClick={handleSend}\r\n//           className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n//         >\r\n//           Send\r\n//         </button>\r\n//         <button\r\n//           onClick={handleVoiceInput}\r\n//           className={`px-4 py-2 rounded text-white ${listening ? 'bg-red-600' : 'bg-green-600'} hover:opacity-80`}\r\n//         >\r\n//           üé§ {listening ? 'Listening...' : 'Speak'}\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AIChat;\r\n\r\n\r\n\r\n// 'use client';\r\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n// import { useEffect } from 'react';\r\n\r\n// const AiChat = () => {\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   useEffect(() => {\r\n//     // Automatically start listening when component mounts\r\n//     SpeechRecognition.startListening({ continuous: true });\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Speak the transcript using a selected feminine voice\r\n//     if (transcript) {\r\n//       const synth = window.speechSynthesis;\r\n//       const utterance = new SpeechSynthesisUtterance(transcript);\r\n\r\n//       // Filter available voices to find a feminine one\r\n//       const voices = synth.getVoices();\r\n//       const selectedVoice = voices.find(\r\n//         (voice) => voice.name.includes('Female') || voice.name.includes('Samantha') || voice.name.includes('Google US English')\r\n//       );\r\n\r\n//       // Set the selected voice (fallback to default if not found)\r\n//       utterance.voice = selectedVoice || voices[0];\r\n\r\n//       // Optional: Set pitch and rate for more natural tone\r\n//       utterance.pitch = 1;\r\n//       utterance.rate = 1;\r\n\r\n//       synth.speak(utterance);\r\n//     }\r\n//   }, [transcript]);\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return <span>Your browser does not support speech recognition.</span>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>üéôÔ∏è AI Chat</h2>\r\n//       <p>Listening: {listening ? 'Yes' : 'No'}</p>\r\n//       <p>Transcript: {transcript}</p>\r\n//       <button onClick={resetTranscript}>Reset</button>\r\n\r\n//       {/* üîá Resume and Pause removed as requested */}\r\n\r\n//       {/* üéß Voice Options (commented out for future use) */}\r\n//       {/* const selectedVoice = voices.find((voice) => voice.name.includes('Google UK English Female')); */}\r\n//       {/* const selectedVoice = voices.find((voice) => voice.name.includes('Microsoft Zira Desktop')); */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AiChat;\r\n\r\n// 'use client'\r\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n// import { useEffect } from 'react';\r\n\r\n// const AiChat = () => {\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   useEffect(() => {\r\n//     // Start listening automatically\r\n//     SpeechRecognition.startListening({ continuous: true });\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Speak the transcript using a selected feminine voice\r\n//     if (transcript) {\r\n//       const synth = window.speechSynthesis;\r\n//       const utterance = new SpeechSynthesisUtterance(transcript);\r\n\r\n//       const voices = synth.getVoices();\r\n//       const selectedVoice = voices.find(\r\n//         (voice) =>\r\n//           voice.name.includes('Female') ||\r\n//           voice.name.includes('Samantha') ||\r\n//           voice.name.includes('Google US English')\r\n//       );\r\n\r\n//       utterance.voice = selectedVoice || voices[0];\r\n//       utterance.pitch = 1;\r\n//       utterance.rate = 1;\r\n\r\n//       synth.speak(utterance);\r\n//     }\r\n//   }, [transcript]);\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return (\r\n//       <div className=\"text-center text-red-500 mt-10\">\r\n//         ‚ùå Your browser does not support speech recognition.\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg border border-gray-200\">\r\n//       <h2 className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\r\n//         üéôÔ∏è AI Voice Chat\r\n//       </h2>\r\n\r\n//       <div className=\"mb-4\">\r\n//         <span className=\"font-medium text-gray-700\">Listening:</span>{' '}\r\n//         <span className={listening ? 'text-green-600' : 'text-red-600'}>\r\n//           {listening ? 'Yes' : 'No'}\r\n//         </span>\r\n//       </div>\r\n\r\n//       <div className=\"mb-4\">\r\n//         <label className=\"block text-gray-700 font-medium mb-1\">Transcript:</label>\r\n//         <div className=\"bg-gray-100 p-3 rounded h-40 overflow-y-auto text-sm text-gray-800 border border-gray-300\">\r\n//           {transcript || 'Start speaking...'}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         onClick={resetTranscript}\r\n//         className=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition duration-200\"\r\n//       >\r\n//         üîÑ Reset\r\n//       </button>\r\n\r\n//       {/* üéß Voice Options (commented out for future use) */}\r\n//       {/* const selectedVoice = voices.find((voice) => voice.name.includes('Google UK English Female')); */}\r\n//       {/* const selectedVoice = voices.find((voice) => voice.name.includes('Microsoft Zira Desktop')); */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AiChat;\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import dynamic from 'next/dynamic';\r\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\n// const AIChat: React.FC = () => {\r\n//   // Chat messages\r\n//   const [messages, setMessages] = useState<string[]>([]);\r\n\r\n//   // User input\r\n//   const [input, setInput] = useState('');\r\n\r\n//   // Available voices + selected voice\r\n//   const [voices, setVoices] = useState<SpeechSynthesisVoice[]>([]);\r\n//   const [selectedVoice, setSelectedVoice] = useState<SpeechSynthesisVoice | null>(null);\r\n\r\n//   // Ref for utterance\r\n//   const utteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\r\n\r\n//   // Speech recognition hook\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   // Load voices safely in browser\r\n//   useEffect(() => {\r\n//     if (typeof window === 'undefined') return;\r\n\r\n//     const loadVoices = () => {\r\n//       const availableVoices = window.speechSynthesis.getVoices();\r\n//       setVoices(availableVoices);\r\n\r\n//       // Default to en-US if available\r\n//       setSelectedVoice(\r\n//         availableVoices.find((v) => v.lang === 'en-US') || availableVoices[0] || null\r\n//       );\r\n//     };\r\n\r\n//     // Voice list may load asynchronously\r\n//     if (typeof window !== 'undefined' && window.speechSynthesis.onvoiceschanged !== undefined) {\r\n//       window.speechSynthesis.onvoiceschanged = loadVoices;\r\n//     }\r\n\r\n//     loadVoices();\r\n//   }, []);\r\n\r\n//   // Fallback UI if speech recognition not supported\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return <span>Speech recognition is not supported in this browser.</span>;\r\n//   }\r\n\r\n//   // Speak text\r\n//   const speakText = (text: string) => {\r\n//     if (typeof window === 'undefined') return;\r\n\r\n//     // Cancel ongoing speech\r\n//     if (window.speechSynthesis.speaking) {\r\n//       window.speechSynthesis.cancel();\r\n//     }\r\n\r\n//     const utterance = new SpeechSynthesisUtterance(text);\r\n//     utterance.voice = selectedVoice || null;\r\n//     utterance.lang = selectedVoice?.lang || 'en-US';\r\n//     utterance.pitch = 1;\r\n//     utterance.rate = 1;\r\n//     utterance.volume = 1;\r\n\r\n//     utteranceRef.current = utterance;\r\n//     window.speechSynthesis.speak(utterance);\r\n//   };\r\n\r\n//   // Send message\r\n//   const handleSend = () => {\r\n//     if (!input.trim()) return;\r\n\r\n//     const userMessage = `You: ${input}`;\r\n//     const aiMessage = `AI: ${generateReply(input)}`;\r\n\r\n//     setMessages((prev) => [...prev, userMessage, aiMessage]);\r\n//     speakText(aiMessage);\r\n//     setInput('');\r\n//     resetTranscript();\r\n//   };\r\n\r\n//   // Mock AI reply\r\n//   const generateReply = (text: string) => {\r\n//     return `I'm just a mock AI, but you said: \"${text}\"`;\r\n//   };\r\n\r\n//   // Voice input\r\n//   const handleVoiceInput = () => {\r\n//     SpeechRecognition.startListening({ continuous: false, language: 'en-US' });\r\n//     setInput(transcript);\r\n//   };\r\n\r\n//   // Playback controls\r\n//   const handlePause = () => {\r\n//     if (typeof window !== 'undefined' && window.speechSynthesis.speaking && !window.speechSynthesis.paused) {\r\n//       window.speechSynthesis.pause();\r\n//     }\r\n//   };\r\n\r\n//   const handleResume = () => {\r\n//     if (typeof window !== 'undefined' && window.speechSynthesis.paused) {\r\n//       window.speechSynthesis.resume();\r\n//     }\r\n//   };\r\n\r\n//   const handleStop = () => {\r\n//     if (typeof window !== 'undefined') {\r\n//       window.speechSynthesis.cancel();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto bg-white rounded shadow\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">AI Chat ü§ñ</h1>\r\n\r\n//       {/* Voice selector */}\r\n//       <div className=\"mb-4\">\r\n//         <label className=\"block mb-2 font-semibold\">Select Voice:</label>\r\n//         <select\r\n//           value={selectedVoice?.name || ''}\r\n//           onChange={(e) =>\r\n//             setSelectedVoice(voices.find((v) => v.name === e.target.value) || null)\r\n//           }\r\n//           className=\"w-full p-2 border rounded\"\r\n//         >\r\n//           {voices.map((voice, idx) => (\r\n//             <option key={idx} value={voice.name}>\r\n//               {voice.name} ({voice.lang})\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       {/* Messages */}\r\n//       <div className=\"space-y-2 mb-4 max-h-60 overflow-y-auto border p-2 rounded bg-gray-50\">\r\n//         {messages.map((msg, idx) => (\r\n//           <div key={idx} className=\"bg-gray-100 p-2 rounded\">\r\n//             {msg}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Input + buttons */}\r\n//       <div className=\"flex gap-2 mb-2\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={input || transcript}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           className=\"flex-1 p-2 border rounded\"\r\n//           placeholder=\"Type or speak your message...\"\r\n//         />\r\n//         <button\r\n//           onClick={handleSend}\r\n//           className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n//         >\r\n//           Send\r\n//         </button>\r\n//         <button\r\n//           onClick={handleVoiceInput}\r\n//           className={`px-4 py-2 rounded text-white ${\r\n//             listening ? 'bg-red-600' : 'bg-green-600'\r\n//           } hover:opacity-80`}\r\n//         >\r\n//           üé§ {listening ? 'Listening...' : 'Speak'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Playback controls */}\r\n//       <div className=\"flex gap-2\">\r\n//         <button\r\n//           onClick={handlePause}\r\n//           className=\"px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\r\n//         >\r\n//           Pause\r\n//         </button>\r\n//         <button\r\n//           onClick={handleResume}\r\n//           className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n//         >\r\n//           Resume\r\n//         </button>\r\n//         <button\r\n//           onClick={handleStop}\r\n//           className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n//         >\r\n//           Stop\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default dynamic(() => Promise.resolve(AIChat), { ssr: false });\r\n\r\n\r\n\r\n\r\n'use client';\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\n\r\nconst AIChat: React.FC = () => {\r\n  // Chat messages\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  // Voices\r\n  const [voices, setVoices] = useState<SpeechSynthesisVoice[]>([]);\r\n  const [selectedVoice, setSelectedVoice] = useState<SpeechSynthesisVoice | null>(null);\r\n\r\n  // Recognition instance\r\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\r\n\r\n  // Speech synthesis utterance\r\n  const utteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\r\n\r\n  // Listening state\r\n  const [listening, setListening] = useState(false);\r\n\r\n  // Load voices\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const loadVoices = () => {\r\n      const availableVoices = window.speechSynthesis.getVoices();\r\n      setVoices(availableVoices);\r\n      setSelectedVoice(\r\n        availableVoices.find((v) => v.lang === 'en-US') || availableVoices[0] || null\r\n      );\r\n    };\r\n\r\n    if (window.speechSynthesis.onvoiceschanged !== undefined) {\r\n      window.speechSynthesis.onvoiceschanged = loadVoices;\r\n    }\r\n    loadVoices();\r\n  }, []);\r\n\r\n  // Initialize recognition\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const SpeechRecognition =\r\n      (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      console.warn('SpeechRecognition not supported in this browser.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onresult = (event: SpeechRecognitionEvent) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setInput(transcript);\r\n    };\r\n\r\n    recognition.onend = () => setListening(false);\r\n\r\n    recognitionRef.current = recognition;\r\n  }, []);\r\n\r\n  // Speak text\r\n  const speakText = (text: string) => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    if (window.speechSynthesis.speaking) {\r\n      window.speechSynthesis.cancel();\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.voice = selectedVoice || null;\r\n    utterance.lang = selectedVoice?.lang || 'en-US';\r\n    utterance.pitch = 1;\r\n    utterance.rate = 1;\r\n    utterance.volume = 1;\r\n\r\n    utteranceRef.current = utterance;\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  // Handle send\r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = `You: ${input}`;\r\n    const aiMessage = `AI: ${generateReply(input)}`;\r\n\r\n    setMessages((prev) => [...prev, userMessage, aiMessage]);\r\n    speakText(aiMessage);\r\n    setInput('');\r\n  };\r\n\r\n  // Mock AI reply\r\n  const generateReply = (text: string) => {\r\n    return `I'm just a mock AI, but you said: \"${text}\"`;\r\n  };\r\n\r\n  // Start voice input\r\n  const handleVoiceInput = () => {\r\n    if (recognitionRef.current) {\r\n      setListening(true);\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  // Playback controls\r\n  const handlePause = () => {\r\n    if (typeof window !== 'undefined' && window.speechSynthesis.speaking && !window.speechSynthesis.paused) {\r\n      window.speechSynthesis.pause();\r\n    }\r\n  };\r\n\r\n  const handleResume = () => {\r\n    if (typeof window !== 'undefined' && window.speechSynthesis.paused) {\r\n      window.speechSynthesis.resume();\r\n    }\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (typeof window !== 'undefined') {\r\n      window.speechSynthesis.cancel();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto bg-white rounded shadow\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">AI Chat ü§ñ</h1>\r\n\r\n      {/* Voice selector */}\r\n      <div className=\"mb-4\">\r\n        <label className=\"block mb-2 font-semibold\">Select Voice:</label>\r\n        <select\r\n          value={selectedVoice?.name || ''}\r\n          onChange={(e) =>\r\n            setSelectedVoice(voices.find((v) => v.name === e.target.value) || null)\r\n          }\r\n          className=\"w-full p-2 border rounded\"\r\n        >\r\n          {voices.map((voice, idx) => (\r\n            <option key={idx} value={voice.name}>\r\n              {voice.name} ({voice.lang})\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Messages */}\r\n      <div className=\"space-y-2 mb-4 max-h-60 overflow-y-auto border p-2 rounded bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className=\"bg-gray-100 p-2 rounded\">\r\n            {msg}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input + buttons */}\r\n      <div className=\"flex gap-2 mb-2\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          className=\"flex-1 p-2 border rounded\"\r\n          placeholder=\"Type or speak your message...\"\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n        >\r\n          Send\r\n        </button>\r\n        <button\r\n          onClick={handleVoiceInput}\r\n          className={`px-4 py-2 rounded text-white ${\r\n            listening ? 'bg-red-600' : 'bg-green-600'\r\n          } hover:opacity-80`}\r\n        >\r\n          üé§ {listening ? 'Listening...' : 'Speak'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Playback controls */}\r\n      <div className=\"flex gap-2\">\r\n        <button\r\n          onClick={handlePause}\r\n          className=\"px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\r\n        >\r\n          Pause\r\n        </button>\r\n        <button\r\n          onClick={handleResume}\r\n          className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n        >\r\n          Resume\r\n        </button>\r\n        <button\r\n          onClick={handleStop}\r\n          className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n        >\r\n          Stop\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Disable SSR for this component\r\nexport default dynamic(() => Promise.resolve(AIChat), { ssr: false });\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 694, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n"],"names":["module","exports","require","vendored","ReactJsxRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAE,wCAAqCA,SAAAA,IAAAA,CADlBA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":";;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,kBAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactDOM\n"],"names":["module","exports","require","vendored","ReactDOM"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":";;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;;IAInC,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,QACvC,UAAOF,QAAQC,GAAG,CAACC,IACpB,cADsC;IAG1C,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,qBAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":["file:///D:/Github/ChatApp/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}}]
}